<!DOCTYPE html>
<html>
<head>
    <title></title>
    <style type="text/css">

        form {
            display: grid;
            grid-gap: 7px;
            grid-template-columns: 120px 12px 300px auto;
        }

            form > label {
                grid-column: 1;
            }

            form > select, form > input {
                grid-column: 2 / span 2;
            }

                form > select + button {
                    grid-column: 4;
                }

            form > button {
                width: 10%;
            }

            form > input[type=checkbox] {
                grid-column: 2;
            }

                form > input[type=checkbox] + label {
                    grid-column: 3;
                }

            form > hr {
                grid-column: 1 / span 4;
                width: 100%;
            }

            form > fieldset {
                grid-column: 1 /span 5;
                border: 0px;
                margin: 0px;
                padding: 0px;
                margin-top: 10px;
            }
    </style>
</head>
<body>
    @{
        var westWindDatabase = WebMatrix.Data.Database.Open("WeestWindDb");
        string sql;
        string selectedProductId = Request[nameof(selectedProductId)];
        string productName = Request[nameof(productName)];
        string supplierId = Request[nameof(supplierId)];
        string categoryId = Request[nameof(categoryId)];
        string qtyPerUnit = Request[nameof(qtyPerUnit)];
        string unitPrice = Request[nameof(unitPrice)];
        string onOrder = Request[nameof(onOrder)];
        string isDiscontinued = Request[nameof(isDiscontinued)];
        string submitAction = Request[nameof(submitAction)];
    }
    <div class="diagnostics">
        @* TO DO: Put this in a razor helper *@
        <h4>Diagnostics</h4>
        <div>Processing the <b>@submitAction</b></div>
        @selectedProductId
        @supplierId
        @categoryId
    </div>

    <h1>Manage Products</h1>
    <div>
        @if (IsPost)
        {
            switch (submitAction)
            {
                case "Edit":
                    sql = "select ProductName, SupplierID, CategoryId, UnitPrice, QuantityPerUnit, UnitsOnOrder, Discontinuer from Products where productID=@0";
                    break;
                case "Add":
                    sql = "insert into Products(ProductName, SupplierID, CategoryId, UnitPrice, QuatityPerUnit, UnitsOnOrder, Discontinued)" +
                            "Values(@0, @1, @2, @3, @4, @5, @6)";
                    //After successful insert
                    sql = "Select scope_identity()";
                    break;
                case "Update":
                    sql = "Update Products set productName = @0, SupplierID = @1, CategoryID = @2, UnitPrice = @3, QuantityPerUnit = @4, UnitsOnOrder = @5, Discontinued = @6" +
                            "where ProductID = @7";
                    break;
                case "Delete":
                    sql = "delete from Products where ProductID = @0";
                    break;
                case "Clear":
                    string dropDownDefault = "0";
                    selectedProductId = dropDownDefault; //default
                    productName = string.Empty;
                    supplierId = dropDownDefault;
                    categoryId = dropDownDefault;
                    unitPrice = string.Empty;
                    qtyPerUnit = string.Empty;
                    onOrder = string.Empty;
                    isDiscontinued = string.Empty;
                    break;
                default:
                    <text>Unknown post-back option</text>
                    break;
            }
        }
        else
        {
            <text>Use this form to manage items in the Product catalog.</text>
        }
    </div>


    <form method="post">
        <label for="ProductsList">Products</label>
        <select name="@nameof(selectedProductId)" id="ProductList">
            <option value="">[Select a product to Edit]</option>
            @{
                var products = QueryDatabase(westWindDatabase, "Select  ProductId, ProductName from Products");
                if (products is Exception)
                {
                    <option value="">[Products unavailable]</option>
                }
                else
                {
                    foreach (var row in products)
                    {
                        <option value="@row.ProductID" selected="@(row.ProductID.ToString() == selectedProductId)">@row.ProductName</option>
                    }
                }
            }
        </select>
        <button type="submit" name="submitAction" value="Edit">Edit</button>
        <hr />

        <label for="ProductName">Name</label>
        <input type="text" name="productName" id="ProductName" />

        <label for="SupplierList">Supplier</label>
        <select type="text" name="supplierList" id="SupplierList">
            <option value="">[Select a Supplier]</option>
            @{
                var suppliers = QueryDatabase(westWindDatabase, "Select SupplierID, CompanyName from Suppliers");
                if (products is Exception)
                {
                    <option value="">[Suppliers unavailable]</option>
                }
                else
                {
                    foreach (var row in suppliers)
                    {
                        <option value="@row.SupplierID">@row.CompanyName</option>
                    }
                }
            }
        </select>

        <label for="CategoriesList">Categories</label>
        <select type="text" name="categoriesList" id="CategoriesList">
            <option value="">[Select a Category]</option>
            @{
                var categories = QueryDatabase(westWindDatabase, "Select CategoryID, CategoryName from Categories");
                if (products is Exception)
                {
                    <option value="">[Categories unavailable]</option>
                }
                else
                {
                    foreach (var row in categories)
                    {
                        <option value="@row.CategoryID">@row.CategoryName</option>
                    }
                }
            }
        </select>

        <label for="UnitPrice">Unit Price</label>
        <input type="text" name="unitPrice" id="UnitPrice" />

        <label for="QtyPerUnit">Quantity Per Unit</label>
        <input type="text" name="qtyPerUnit" id="QtyPerUnit" />

        <label for="OnOrder">On Order</label>
        <input type="text" name="onOrder" id="OnOrder" />

        @* the for makes it so it checks when you click the label *@
        <label for="IsDiscontinued">Discontinued</label>
        <input type="checkbox" name="isDiscontinued" id="IsDiscontinued" />
        <label for="IsDiscontinued">Check if discontinued</label>

        <fieldset>
            <button type="submit" name="submitAction" value="Add">Add New Product</button>
            <button type="submit" name="submitAction" value="Update">Update Product</button>
            <button type="submit" name="submitAction" value="Delete">Remove From Catalog</button>
            <button type="submit" name="submitAction" value="Clear">Clear Form</button>
            @* inputs: the value is the same as the text unlike buttons *@
            <input type="reset" value="Reset Form" />
        </fieldset>
    </form>

</body>
</html>

@functions {
    // Razor functions CAN NOT directly output/render to the browser response

    private dynamic QueryDatabase(WebMatrix.Data.Database db, string query)
    {
        dynamic result;
        try
        {
            result = db.Query(query);
        }
        catch (Exception ex)
        {
            result = ex;
        }
        return result;
    }

}